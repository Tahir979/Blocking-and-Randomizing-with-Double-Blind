<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAALsBAAC7AQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAACrAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAqwAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAA
        AIMAAADLAAAA0AAAAPcAAAD3AAAA0AAAAMsAAACDAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABwAAABIAAAAqAAAA3AAAANwAAAAqAAAAEgAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADZAAAA2QAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAANkAAADZAAAAGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAA2QAAANkAAAAYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADZAAAA2QAA
        ABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAA
        ANkAAADZAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAYAAAA2QAAANkAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABgAAADZAAAA2QAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAANkAAADZAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAlAAAA3AAAANwAAAAlAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAB0AAABdAAAAlwAAAMEAAAD4AAAA+AAAAMEAAACXAAAAXQAA
        AB0AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAABwAAAA1AAAAPoAAAD6AAAA7gAAAPsAAAD7AAAA7gAA
        APoAAAD6AAAA1AAAAHAAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAsAAAAPoAAADqAAAAoAAAAFYAAABBAAAA3QAA
        AN0AAABBAAAAVgAAAKAAAADqAAAA+gAAALAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgAAAMEAAAD9AAAAuAAAAEAAAAAHAAAAAAAA
        ABgAAADZAAAA2QAAABgAAAAAAAAABwAAAEAAAAC4AAAA/QAAAMEAAAAqAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAACuAAAA/QAAAKIAAAAaAAAAAAAA
        AAAAAAAAAAAAGAAAANkAAADZAAAAGAAAAAAAAAAAAAAAAAAAABoAAACiAAAA/QAAAK4AAAAUAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAP0AAAC4AAAAGgAA
        AAAAAAAAAAAAAAAAAAAAAAAYAAAA2QAAANkAAAAYAAAAAAAAAAAAAAAAAAAAAAAAABoAAAC4AAAA/QAA
        AHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAADTAAAA6gAA
        AD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADZAAAA2QAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AD0AAADqAAAA0wAAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAA
        AP0AAACeAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAANkAAADZAAAAGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAAJ4AAAD9AAAAYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAACeAAAA+gAAAFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAA2QAAANkAAAAYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAVwAAAPoAAACeAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEQAAAMQAAADqAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADZAAAA2QAA
        ABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAA6gAAAMQAAAARAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAXAAAA2AAAANsAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAA
        ANkAAADZAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADbAAAA2AAAABcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAADjAAAA0AAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAYAAAA2QAAANkAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAANAAAADjAAAAGwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAOMAAADQAAAAFQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABgAAADZAAAA2QAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAA0AAA
        AOMAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAA4wAAANAAAAAVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAANkAAADZAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABUAAADQAAAA4wAAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAADjAAAA0AAA
        ABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAA2QAAANkAAAAYAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFQAAANAAAADjAAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAA
        AOMAAADPAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADZAAAA2QAAABgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAVAAAAzwAAAOMAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAwAAAA7QAAALwAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAANkAAADZAAAAGAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAC8AAAA7QAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAIAAAAJQAAAJ8AAAD+AAAAhgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlAAAA3AAA
        ANwAAAAlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAIYAAAD+AAAAnwAAACUAAAAIAAAAAAAA
        AAAAAAAAAAAACgAAAIwAAADiAAAA/AAAAMYAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAA
        AL4AAAD4AAAA+AAAAL4AAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAAAMYAAAD8AAAA4gAA
        AIwAAAAKAAAAAAAAAAAAAAAOAAAAsgAAAOkAAACmAAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABLAAAA7AAAAP8AAAD/AAAA7AAAAEsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwAA
        AKYAAADpAAAAsgAAAA4AAAAA/+AH///gB///8A////w////8P////D////w////8P////D////w////8
        P///+B///8AD//+AAf//AAD//gQgf/wcOD/8PDw/+Hw+H/h8Ph/w/D8P8Pw/D/D8Pw/w/D8P8Pw/D/D8
        Pw/w/D8P8Pw/D/D8Pw/A/D8DgfgfgYP4H8E=
</value>
  </data>
</root>